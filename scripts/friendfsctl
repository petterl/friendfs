#!/bin/bash 

HOST=localhost
ROOTDIR=`cd $(dirname $0)/..;pwd`
if [ -z "$RELDIR" ]; then
    RELDIR=$ROOTDIR/releases
fi
FRIENDFS_CONF=${FRIENDFS_CONF:-/etc/friendfs.conf}
if [ ! -f ${FRIENDFS_CONF} ]; then
    FRIENDFS_CONF=$HOME/.friendfs.conf
fi
[ ! -f ${FRIENDFS_CONF} ] || cp $ROOTDIR/friendfs/doc/friendfs.conf $FRIENDFS_CONF

START_ERL="$ROOTDIR/bin/start_erl $ROOTDIR $RELDIR $RELDIR/start_erl.data -pa $ROOTDIR/patches/"

RUN_ERL="$ROOTDIR/bin/run_erl -daemon $ROOTDIR/pipes/ $ROOTDIR/log " 

function ctl() {
    $START_ERL -sname friendfsctrl@${HOST} \
        -noshell \
        -friendfs config_path "\"${FRIENDFS_CONF}\"" \
        -sasl errlog_type error \
        -friendfs cmd "\"${@}\"" 
}

function start() {
    echo -n "Starting FriendFS..."
    $RUN_ERL "exec ${START_ERL} -sname friendfs@${HOST} -friendfs config_path '\"$FRIENDFS_CONF\"'"
    # check if start is ok cmd ping
    if true; then
        echo "done"
    else
        echo "failed"
    fi
}

function stop() {
    echo -n "Stopping FriendFS..."
    ctl stop
    # $ERL_CALL -sname $ERL_SNAME -a "init stop []" >/dev/null
    # check if start is ok cmd ping
    if true; then
        echo "done"
    else
        echo "failed"
    fi
}

function shell() {
    $ROOTDIR/bin/to_erl $ROOTDIR/pipes/
}

function restart() {
    stop
    sleep 1
    start
}

function usage() {
    ctl usage
    exit
}

[ $# -lt 1 ] && usage 


function help() {
    echo "The valid commands are: "
    echo "   start - start the friendfs daemon"
    echo "   stop - stop the friendfs daemon"
    echo "   restart - restart the friendfs daemon"
    echo "   status - get status of running daemon"
    echo "   connect - connect to the friendfs daemon"
    echo ""
    echo "To mount a filesystem see 'friendfs'"
}


function check_running() {
    # Check if friendfs daemon is running
    $ERL_CALL -sname $ERL_SNAME -a "ok" 2>/dev/null 1>&2
    return $?
}


case $1 in
    'start') start ;;
    'shell') shell ;;
    'restart') restart ;;
    'stop') stop ;;
    *) ctl "$@" 
esac

